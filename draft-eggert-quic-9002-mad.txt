



QUIC                                                           L. Eggert
Internet-Draft                                                   Mozilla
Updates: 9002 (if approved)                            17 September 2024
Intended status: Standards Track                                        
Expires: 21 March 2025


          Maximum Acknowledgment Delay and QUIC Loss Recovery
                   draft-eggert-quic-9002-mad-latest

Abstract

   This document updates RFC9002 by specifying how the max_ack_delay is
   incorporated into the computation of the loss_delay used for time-
   based loss recovery.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://larseggert.github.io/quic-9002-mad/draft-eggert-quic-
   9002-mad.html.  Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-eggert-quic-9002-mad/.

   Discussion of this document takes place on the QUIC Working Group
   mailing list (mailto:quic@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/quic/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/quic/.

   Source for this draft and an issue tracker can be found at
   https://github.com/larseggert/quic-9002-mad.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 21 March 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Updates to RFC9002
     3.1.  Detecting Lost Packets
   4.  Security Considerations
   5.  IANA Considerations
   6.  Normative References
   Acknowledgments
   Author's Address

1.  Introduction

   The maximum acknowledgement delay (max_ack_delay) is the maximum
   amount of time by which the receiver intends to delay acknowledgments
   for packets in the Application Data packet number space, as defined
   by the eponymous transport parameter (Section 18.2 of [RFC9000]).

   This document updates [RFC9002] by specifying how the max_ack_delay
   is incorporated into the computation of the loss_delay used for time-
   based loss recovery.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Updates to RFC9002

3.1.  Detecting Lost Packets

   Appendix A.10 of [RFC9002] contains pseudo code for detecting lost
   packets in a packet number space.  That code includes a computation
   of loss_delay, i.e., a time in the past before which all sent packets
   are deemed lost.

   loss_delay = kTimeThreshold * max(latest_rtt, smoothed_rtt)

   This computation of loss_delay does not take max_ack_delay into
   account; kTimeThreshold (which is 9/8) is the only stretch factor
   that adds some affordance for delayed ACK delivery.

   When the peer ACK delay approaches or (especially) when it exceeds
   1/8 * RTT, this can cause the sender to declare sent packets as lost,
   causing unneeded early retransmissions.

   This document updates this calculation of loss_delay to take
   max_ack_delay into account:

   loss_delay = kTimeThreshold * max(latest_rtt, smoothed_rtt) +
   max_ack_delay

   As in Section 6.2.1 of [RFC9002], when loss_delay is calculated for
   Initial or Handshake packet number spaces, the max_ack_delay in the
   loss_delay computation is set to 0, since the peer is expected to not
   delay ACKs in these packet number spaces intentionally; see
   Section 13.2.1 of [RFC9000].

4.  Security Considerations

   No security considerations are introduced by this document.

5.  IANA Considerations

   This document has no IANA actions.

6.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC9000]  Iyengar, J., Ed. and M. Thomson, Ed., "QUIC: A UDP-Based
              Multiplexed and Secure Transport", RFC 9000,
              DOI 10.17487/RFC9000, May 2021,
              <https://www.rfc-editor.org/rfc/rfc9000>.

   [RFC9002]  Iyengar, J., Ed. and I. Swett, Ed., "QUIC Loss Detection
              and Congestion Control", RFC 9002, DOI 10.17487/RFC9002,
              May 2021, <https://www.rfc-editor.org/rfc/rfc9002>.

Acknowledgments

   These individuals suggested improvements to this document:

Author's Address

   Lars Eggert
   Mozilla
   Stenbergintie 12 B
   FI-02700 Kauniainen
   Finland
   Email: lars@eggert.org
   URI:   https://eggert.org/
